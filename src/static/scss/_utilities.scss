//##_utilities.scss##

.strikethrough {
  text-decoration: line-through;
}

/*-----------
//  WEBSITE CLASSES
------------------------------*/

.main {
  flex-grow: 1;
  width: 100%;
}

.page-title {
  padding-top: 1rem;
}

.content {
  padding-top: 0.5rem;
  padding-right: 1rem;
  padding-bottom: 1rem;
  padding-left: 1rem;
}

.content p, .content ul {
  color: $bg-dark-color;
}

.logo {
  display: block;
  font-size: 2.25rem;
  font-family: 'Roboto', serif;
  font-weight: normal;
}

.ul {
  list-style-type: initial;
  margin-block-start: 1rem;
  margin-block-end: 1rem;
  padding-inline-start: 40px;
}

.horizontal-rule {
  max-width: 960px;
  margin: 1rem auto;
  border-top: 2px solid gray;
}

.blockquote {
  color: rgb(75,75,75);
  background-color: rgba(50,50,50,0.05);
  padding: 1rem 0;
  padding-left: 2rem;
  margin-top: 0.5rem;
  margin-left: 0rem;
  border-left: 3px solid gray;
  text-indent: -1rem;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba($bg-light-color, 0.8);
  z-index: 999;
  overflow-x: hidden;
  overflow-y: auto;
}

//-------------------------
//  LANDING PAGE FEATURES
//-------------------------

.view {
  flex-grow: 1;
  width: 100%;
  margin-top: 3rem; /* to compensate for .header.sticky-top */
}

.section {
  background-color: $section-light-color; //explicitly set background-color for .slant (which uses "inherit")
  width: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;

  &-dark {
    background-color: $section-dark-color;
  }
}

$container-row-gap: 1rem;
$container-column-gap: 1rem;
.container {
  &,
  &-full {
    width: 100%;
    padding-left: 1rem;
    padding-right: 1rem;
    margin: 0 auto;
  }

  &-row {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    margin-left: -$container-row-gap;
    margin-top: -$container-column-gap;

    //Add a gap between items
    & > * {
      margin-left: $container-row-gap;
      margin-top: $container-column-gap;
    }

    //Add a reversed option
    &-reverse {
      flex-direction: row-reverse;
      margin-left: -$container-row-gap;
      margin-top: -$container-column-gap;

      & > * {
        margin-left: $container-row-gap;
        margin-top: $container-column-gap;
      }
    }

    &-column {
      flex: 1 0 0;
      padding: 0 1.5rem;
    }
  }

  //Set the max-width, depending on the breakpoint
  @each $breakpoint, $size in $container-max-widths {
    @include media-width($breakpoint, min) {
      & {
        max-width: $size;
      }
    }
  }

  @include media-width("tablet") {
    &-row {
      flex-direction: column!important;

      & > *:not(:last-child) {
        width: 100%;
        margin-right: 0;
        margin-bottom: 1rem;
      }
    }
  }
}

$slant-size: 4rem;
.slant {
  @include media-width("mobile") {
    $slant-size: 1rem;
  }

  @mixin pseudo-slant($topOrBottom) {
    // Start by making the element the relative positioning
    position: relative;

    // Set up the slant
    #{if($topOrBottom == "top", "&::before", if($topOrBottom == "bottom", "&::after", null))} {
      content: "";
      position: absolute;
      width: 100%;
      height: $slant-size;
      clip-path: polygon(0 100%, 100% 0, 100% 100%);
    }
  }

  &-top {
    @include pseudo-slant("top");
  }

  &-bottom {
    @include pseudo-slant("bottom");
  }

  &-top {
    &::before {
      top: -$slant-size;
      left: 0;
      margin-top: 1px;
      background-color: inherit;
    }
  }

  &-bottom {
    & + * {
      // margin-top: -1rem;
    }

    &::after {
      bottom: 0;
      left: 0;
      margin-bottom: -1px;
      background-color: rgb(245,245,245);
    }
  }
}

.sticky {
  @mixin sticky($side) {
    position: fixed;
    left: 0;
    width: 100%;
    z-index: 999;
    #{$side}: 0;
  }

  &-top {
    @include sticky(top);
  }

  &-bottom {
    @include sticky(bottom);
  }
}

.horizontal-rule {
  //Set the max-width, depending on the breakpoint
  @each $breakpoint, $size in $container-max-widths {
    @include media-width($breakpoint, min) {
      & {
        max-width: $size;
      }
    }
  }
}

.bttn {
  color: white;
  background-color: $primary-color;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;

  &-negative {
    color: black;
    background-color: rgb(200,200,200);
  }

  &[disabled] {
    color: rgba(16,16,16, 0.3);
    background-color: rgba(239,239,239, 0.3);
    border: 1px solid rgba(118,118,118,0.3);
  }
}
@include focus(".bttn") {
  // use of !important to override buttons
  // that are also a[href] (which has a higher specificity)
  @include default-focus($important:true);
  outline-offset: 2px!important;
}
@include focus("button") {
  // use of !important to override buttons
  // that are also a[href] (which has a higher specificity)
  @include default-focus($important:true);
  outline-offset: 2px!important;
}

.form {
  max-width: 576px;
  margin: 0 auto;

  //Style the form whenever any components are focused on
  &:focus-within {

  }

  &-component {
    margin-bottom: 1rem;
  }

  &-input {
    display: block;
    width: 100%;
    margin-top: 0.5rem;
    margin-bottom: 1rem;
    padding: 0.5rem 1rem;
    border: 1px solid gray;
    border-radius: 0.25rem;
    background-color: white;
    font-size: 1rem;
    outline: 1px solid transparent;
    transition: outline 0.15s;

    &:focus {
      outline: 3px solid lightblue;
    }

    &[disabled],
    &[readonly] {
      cursour: default;
    }

    &[disabled] {
      color: rgb(84,84,84);
      background-color: rgb(233,236,239);
    }

    &[readonly] {
      background: none;
      border: none;
    }
  }

  &-label {
    font-weight: bold;
    color: gray;
  }

  &-text {

  }

  &-textarea {
    resize: none;
    height: 10rem;
  }

  &-button {
    width: 9rem;
    height: 2.5rem;
    font-size: 1rem;
    font-weight: bold;
    color: $text-light-color;
    background-color: $primary-color;
    padding: 0.25rem 1rem;
    border: none;
    border-radius: 0.5rem;
  }

  &-button:hover {
    background-color: gray;
    transition: background-color 0.25s;
  }
}

.cta-bttn {
  display: inline-block;
  background-color: $primary-color;
  min-width: 5rem;
  padding: 0.5rem 1rem;
  margin-top: 1.5rem;
  border: none;
  border-radius: 0.5rem;
  color: $text-light-color;
  text-align: right;
  font-weight: bold;

  &-icon {
    margin-left: 0.25rem;
  }
}
